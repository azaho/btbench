"use client";

import { useState } from "react";
import { useParams, useRouter } from "next/navigation";
import Link from "next/link";

export default function SubmitModel() {
  const { task } = useParams(); // Get the task name from the URL
  const router = useRouter();
  const [formData, setFormData] = useState({
    modelName: "",
    rocAuc: "",
    accuracy: "",
    organization: "",
  });

  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    setFormData({ ...formData, [e.target.name]: e.target.value });
  };

  const handleSubmit = (e: React.FormEvent) => {
    e.preventDefault();
    alert("Submission received! Your model has been added to the leaderboard.");
    router.push(`/leaderboards/${task}`); // Redirects back to leaderboard after submission
  };

  return (
    <div className="min-h-screen bg-gray-900 text-white flex flex-col items-center p-6">
      <h1 className="text-4xl font-bold mb-4">Submit Model for {task.replace("-", " ")}</h1>

      <div className="bg-gray-800 p-6 rounded-lg shadow-lg max-w-3xl">
        <h2 className="text-2xl font-semibold mb-4">Submission Instructions</h2>

        <ol className="list-decimal pl-6 text-gray-300 space-y-3">
          <li>
            <strong>Download and prepare the dataset</strong> by following the steps in 
            <a href="https://github.com/azaho/btbench" target="_blank" className="text-blue-400 hover:underline ml-1">
              btbench GitHub Repository
            </a>.
          </li>
          <li>
            <strong>Run your model</strong> on the **standardized dataset** generated by `btbench`.
          </li>
          <li>
            <strong>Manually enter your results</strong> below, including **ROC AUC**, **Classification Accuracy**, and your **Model Name**.
          </li>
          <li>
            Click **Submit Model** to add your entry to the leaderboard.
          </li>
        </ol>

        {/* Submission Form */}
        <form className="mt-6 space-y-4" onSubmit={handleSubmit}>
          <input
            type="text"
            name="modelName"
            placeholder="Model Name"
            className="w-full p-2 bg-gray-700 text-white rounded"
            value={formData.modelName}
            onChange={handleChange}
            required
          />
          <input
            type="text"
            name="rocAuc"
            placeholder="ROC AUC Score"
            className="w-full p-2 bg-gray-700 text-white rounded"
            value={formData.rocAuc}
            onChange={handleChange}
            required
          />
          <input
            type="text"
            name="accuracy"
            placeholder="Classification Accuracy (%)"
            className="w-full p-2 bg-gray-700 text-white rounded"
            value={formData.accuracy}
            onChange={handleChange}
            required
          />
          <input
            type="text"
            name="organization"
            placeholder="Organization (Optional)"
            className="w-full p-2 bg-gray-700 text-white rounded"
            value={formData.organization}
            onChange={handleChange}
          />

          {/* Submission & Navigation Buttons */}
          <div className="flex justify-between mt-4">
            <button type="button" onClick={() => router.push(`/leaderboards/${task}`)}
              className="bg-gray-500 hover:bg-gray-600 text-white px-4 py-2 rounded-lg">
              Back to Leaderboard
            </button>
            <button type="submit" className="bg-green-500 hover:bg-green-600 text-white px-4 py-2 rounded-lg">
              Submit Model
            </button>
          </div>
        </form>
      </div>
    </div>
  );
}
